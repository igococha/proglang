/* Generated By:JJTree: Do not edit this line. ASTReadStatement.java */

public class ASTReadStatement extends SimpleNode {
  public ASTReadStatement(int id) {
    super(id);
  }

  public ASTReadStatement(TPLParser p, int id) {
    super(p, id);
  }

 /*
  * Field added to automatically generated class by DB to hold
  * name of variable in node.
  */

  public String name;

  /*
  * Customized dump written by DB to show name in printed tree.
  * Overrides dump from SimpleNode. This is a leaf so no children to dump.
  */

  public void dump(String prefix) {
    System.out.print(toString(prefix));
    System.out.println(" "+name);
  }

  /* Added by DB to perform identification and type checking. */

  public void identification () {
    if (!(symtab.containsKey(name)))
      System.out.println("TPL Identification: "+name+" not declared (read).");
  }

  public void typecheck () {
    NodeType = TPLTypes.stmType;
  }

  /* Added by DB to perform interpreting. */

  public void interpret()
  {
     IdSymbol id = (IdSymbol) symtab.get(name);
     byte[] b = new byte[64];
     int i;

     if (id.type == TPLTypes.boolType)
     {
        System.out.print("Enter a value for \'" + name + "\' (boolean) : ");
        System.out.flush();
        try
        {
           i = System.in.read(b);
           id.boolvalue = (new Boolean((new String(b, 0, i - 1)).trim())).booleanValue();
        } catch(Exception e) { System.exit(1); }
     }
     else
     {
        System.out.print("Enter a value for \'" + name + "\' (int) : ");
        System.out.flush();
        try
        {
           i = System.in.read(b);
           id.intvalue = (new Integer((new String(b, 0, i - 1)).trim())).intValue();
        } catch(Exception e) {
           System.out.println("Exceptio : " + e.getClass().getName());
           System.exit(1);
        }
     }
  }

}
