/* Generated By:JJTree: Do not edit this line. ASTAssignStatement.java */

public class ASTAssignStatement extends SimpleNode {
  public ASTAssignStatement(int id) {
    super(id);
  }

  public ASTAssignStatement(TPLParser p, int id) {
    super(p, id);
  }

  /* Added by DB to perform identification and type checking. */

  public void identification () {
    jjtGetChild(0).identification();
    jjtGetChild(1).identification();
  }

  public void typecheck () {
    jjtGetChild(0).typecheck();
    jjtGetChild(1).typecheck();
    if (jjtGetChild(0).GetNodeType() == TPLTypes.intType) {
       if (jjtGetChild(1).GetNodeType() != TPLTypes.intType)
          System.out.println("TPL Typechecker: assign of non-int exp to int var.");
    }
    else if (jjtGetChild(0).GetNodeType() == TPLTypes.boolType) {
       if (jjtGetChild(1).GetNodeType() != TPLTypes.boolType)
          System.out.println("TPL Typechecker: assign of non-bool exp to bool var.");
    }
    NodeType = TPLTypes.stmType;
  }


  /* Added by DB to perform interpretation. */

  public void interpret() 	/* Overwrite the symbol value appropriately. */
  {
     IdSymbol i;

     jjtGetChild(1).interpret();
     i = (IdSymbol)symtab.get(((ASTId)jjtGetChild(0)).name);
     if (i.type == TPLTypes.intType)
       i.intvalue = ((Integer)stack.pop()).intValue();
     else
       i.boolvalue = ((Boolean)stack.pop()).booleanValue();
  }

}
